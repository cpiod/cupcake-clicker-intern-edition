pico-8 cartridge // http://www.pico-8.com
version 41
__lua__
-- cupcake clicker (intern edition)
-- cpiod for gmtk game jam 2023

-- modes:
-- 0: alarm clock
-- 1: title screen
-- 10: color
-- 11: menu
-- 12: search
-- 13: search done
-- 99: game over

-- drop: x,y,typ

-- ingr: name,sprx,spry,w,h
-- model: nb,coeff

function _init()
 camera_x=-128
 camera_y=0
 day=1
 round_duration=300
 search_duration=600
 ingr={}
 nb_machines=0
 search=0
 models={}
 rewards={2,2,30}
 -- more stock: id=20
 -- new machine: id=30
 -- id=40-49: ingredient plus rapide
 add(models,{id=11,name="valentine",nb=4,coeff=1})
 add(ingr,{id=1,name="strawberry",sprx=0,spry=0,w=13,h=13,spd=1})
 current_quality=0
 endtime=t()+round_duration
 target=10
 current=0
 stock=0
 radio_state=0
	change_mode(12)
	poke(0x5f2d,3) -- enable mouse
	poke(0x5f5c,-1) -- no btnp autorepeat
	modified_machine=0
--	typ2spr={[0]=0}
--	typ2col={[0]=8}
	selected_ingr=1
	draw_zone_x=25
	draw_zone_y=15
	current_model=4
	draw_zone_width=10+8*8
	draw_zone_height=10+4*8
	-- test
 m=add_machine()
 m+="broken"
end

-- font
poke(0x5600,unpack(split

-- version with asserts (238 tokens)

-- renaming and world
cmp,has,_ents=pack,rawget,{}

function ent()
 -- find the value in components
 function _find(self,a)
 	 for _,t in pairs(self) do
	   if(t[a]!=nil) return t
	  end
	  assert(false,"field not found:"..a)
 end
 
 -- you can remove this function
 -- if you delete the asserts
 function check_no_duplicates(self)
  for k1,t1 in pairs(self) do
   for k2,t2 in pairs(self) do
    if k1<k2 then
	    for f1,_ in pairs(t1) do
	     for f2,_ in pairs(t2) do
	      assert(f1!=f2,"duplicated field "..f1.." in "..k1.." and in "..k2)
	     end
	    end
    end
   end
  end
 end
 
 return add(_ents,
  setmetatable({},{
  -- check value in components
  -- components cannot be accessed directly
  __index=function(self,a)
   return _find(self,a)[a]
  end,
  __newindex=function(self,a,v)
   _find(self,a)[a]=v
  end,
  __add=function(self,cmp)
   -- two cases: string or table
   if type(cmp)=="string" then
--    assert(rawget(self,cmp)==nil,"already existing: "..cmp)
    rawset(self,cmp,{})
   else
    -- check if already existing
    local cn=cmp[1]
--    assert(rawget(self,cn)==nil,"already existing: "..cn)
    rawset(self,cn,cmp[2])
    check_no_duplicates(self)
   end
   return self
  end,
  __sub=function(self,cn)
   -- double removal is not a problem
   return rawset(self,cn,nil)
  end}))
end

function sys(cmps,f)
 return function(...)
  for e in all(_ents) do
   for cn in all(cmps) do
    if(not has(e,cn)) goto _
   end
   f(e,...)
   ::_::
  end
 end
end

-- machine: nb
-- running
-- broken
-- recipe: ingr quality time rem
-->8
-- draw

function _draw()
 if mode==0 then
  draw_phone() 
 elseif mode==1 then
  draw_title_screen()
 end
 if mode>=10 and mode<90 then
	cls(5)
	palt(14,true)
	?"cupcake clicker! "..flr(endtime-t()).."s".." "
	?max(0,ceil(target-current)).."$ missing"
	if stock>0 then
 	?max(0,ceil(current-target)).."/"..stock.." in fridge"
	end
	end
	if mode==10 then
	 draw_color()
 elseif mode==11 then
  draw_menu()
 elseif mode==12 then
  draw_search()
 elseif mode==13 then
  draw_search_done()
 elseif mode==99 then
  draw_game_over()
 end
-- ?mode,110,110
end

function nice_print(t,x,y,c,big,c2)
 if(big==nil) big=true
 if big then
  x=x or 64-#t*4
  t="\014"..t
 else
  x=x or 64-#t*2
 end
 for dx=-1,1 do
  for dy=-1,1 do
   ?t,x+dx,y+dy,c2 or 0
  end
 end
 ?t,x,y,c or 7
end

function draw_game_over()
 cls(6)
 ?"game over...",20,60,8
end

function draw_menu()
 ?"search",20,20
 local y=50
 for e in all(_ents) do
  if has(e,"machine") then
   if has(e,"running") then
    ?"machine is running "..(ceil(100*60*e.quality/e.time)/100).."$/s",20,y
   else
    ?"machine has no recipe",20,y
   end
   y+=10
  end
 end
	spr(2,mouse_x,mouse_y)
end

function draw_color()
	-- drops
--	for d in all(drops) do
--	 pal(14,typ2col[d.typ])
--	 spr(typ2spr[d.typ],d.x,d.y)
--	end
 palt(0,false)
	-- model
	spr(current_model,0,50,4,2)
	spr(36,0,50+16,4,2)
	-- base
	spr(8,draw_zone_x+5,draw_zone_y+5,8,4)
	sspr(32,16,32,16,draw_zone_x+5,draw_zone_y+5+8*4,64,32)
	palt(0,true)
	-- ingredients
 for k,i in ipairs(ingr) do
  sspr(i.sprx,i.spry,i.w,i.h,100,20+10*k)
 end
	-- mouse
	if selected_ingr==nil or not in_draw_zone then
		spr(2,mouse_x,mouse_y)
	else
		fillp(░+0b.01) -- to sprite too
		local i=ingr[selected_ingr]
  sspr(i.sprx,i.spry,i.w,i.h,mouse_x-i.w\2,mouse_y-i.h\2)
 	fillp()
 	pal()
 end
 ?"save!",80,100
 ?"value "..get_manual().."$",10,100
 ?"delete",100,100
 ?"quality "..ceil(current_recipe.quality*100).."%",10,110
 local t=current_recipe.time
 if t then
  ?"time "..t,10,116
  ?"recipe "..(ceil(100*60*current_recipe.quality/t)/100).."$/s",10,122
 end
end

function draw_search()
 cls(0)
 pal()
 camera(camera_x,camera_y)
 rectfill(-128,0,0,128,0x5)
 nice_print("storehouse",64-4*10-128,20,4)
 rectfill(-100,30,-30,128,4)
 fillp(░\1)
 rectfill(-95,35,-35,128,0x01)
 fillp()
 local x=-95+50*(t()-t12)
 clip(-95+128,35,60,100)
 if x<=-35 then
  rectfill(x,35,-35,128,13)
  ?"slide\nto\nopen",x+5,50,6
  circfill(x+5,90,3)
  clip(-95+128,35,50*(t()-t12),100)
 end
 fillp(◆)
 circfill(mouse_x+camera_x,mouse_y,4,9)
 fillp()
 clip()
 if search_found then
  spr(217,goal_x,goal_y)
	 if flash==nil then
	  --pass
	 elseif type(flash)=="string" then
	  ?flash,20,50
	 elseif flash<10 then
	  for i in all(ingr) do
	   if i.id==flash then
	    ?"new ingredient: "..i.name,20,50
	    break
	   end
	  end
	 elseif flash<20 then
	  for m in all(models) do
	   if m.id==flash then
	    ?"new model: "..m.name,20,50
	    break
	   end
	  end
	 end 
	end
end
-->8
-- update

function change_mode(new_mode)
 -- exit
 if mode==10 then
  current_recipe=nil
  for e in all(_ents) do
   if has(e,"machine") and e.nb==current_machine then
    e+="running"
    break
   end
  end
 end
 -- enter
 if new_mode==10 then
  for e in all(_ents) do
   if has(e,"machine") and e.nb==current_machine then
    e-="running"
    break
   end
  end
  setbase(current_model)
  current_recipe={ingr={},quality=0}
 elseif new_mode==0 then
  t0=t()
 elseif new_mode==12 then
  t12=t()
  goal_x=ceil(-97+rnd(56))
  goal_y=ceil(37+rnd(89))
  search_found=false
 end
 mode=new_mode
end

function _update60()
 if t()>endtime then
  if current<target then
   change_mode(99)
  end
  target*=1.5
  endtime=t()+round_duration
 end
	mouse_x=stat(32)-1
	mouse_y=stat(33)-1
	lclick=btnp(5)
	rclick=btnp(4)
	if mode>=10 and mode<20 then
	 produce()
	end
	if mode==0 then
  if t()-t0>3 and lclick then
   if day==1 then
    change_mode(1)
   else
    -- directly to intern access
    change_mode(11)
   end
 	end
 elseif mode==1 then
  update_title_screen(lclick)
 elseif mode==10 then
  update_color(lclick)
  if(rclick) change_mode(11)
 elseif mode==12 then
  update_search()
  if(rclick) change_mode(11)
 elseif mode==13 then
  if(rclick) change_mode(11)
 elseif mode==11 then
  if lclick then 
   if mouse_y>17 and mouse_y<30 then
    change_mode(12)
   elseif mouse_y>47 and mouse_y<47+10*nb_machines then
	   current_machine=ceil((mouse_y-50)/10)
    if current_machine>nb_machines then
     current_machine=nb_machines
    end
    change_mode(10)
   end
  end
 end
end
-->8
-- production

function add_machine()
 nb_machines+=1
	machine=ent()
	machine+=cmp("machine",{nb=nb_machines})
	return machine
end

function update_all_compute_time()
 for e in all(_ents) do
  if has(e,"recipe") then
   e.time=compute_time(e.ingr)
  end
 end
end

function compute_time(i)
 local out=0
 for k,v in pairs(i) do
  out+=v*ingr[k].spd
	end
	return out
end

function create_cupcakes(nb)
 current+=nb
	if(current>target+stock) current=target+stock
end

produce=sys({"machine","running","recipe"},
 function (e)
  if e.rem==0 then
	  e.rem=compute_time(e.ingr)
	  create_cupcakes(e.quality)
	 else
	  e.rem-=1
	 end
 end)
-->8
-- coloring
function get_manual()
 return flr(current_recipe.quality*20)
end

function mix(c1,c2)
 if(c1==c2) return c1
 if(c1==7) return c2
 if(c2==7) return c1
 if(c1==4 or c2==4) return 4
 if(c1>c2) c1,c2=c2,c1
 if c1==2 then
  local t={[3]=4,[8]=2,[9]=4,[10]=4,[12]=2}
  return t[c2] 
 elseif c1==3 then
  local t={[10]=3,[9]=4,[8]=4,[12]=3}
  return t[c2] 
 elseif c1==8 then
  local t={[10]=9,[12]=2,[9]=9}
  return t[c2]
 elseif c1==9 then
  local t={[10]=9,[12]=4}
  return t[c2] 
 elseif c1==10 then
  local t={[12]=3}
  return t[c2] 
 else
  assert(false)
 end
end

function update_color(lclick)
 -- also used in draw
	in_draw_zone=mouse_x>=draw_zone_x
 	 and mouse_y>=draw_zone_y
 	 and mouse_x<draw_zone_x+draw_zone_width
 	 and mouse_y<draw_zone_y+draw_zone_height
 	 
	if lclick then
	 for k,i in ipairs(ingr) do
	  if mouse_x>=100 and mouse_x<100+i.w
	  and mouse_y>=20+10*k and mouse_y<20+10*k+i.h then
	   selected_ingr=k
	   break
	  end
  end

 	if in_draw_zone then
 		local i=ingr[selected_ingr]
 	 applydrop(mouse_x-i.w\2-draw_zone_x-5,mouse_y-i.h\2-draw_zone_y-5,i)
 	elseif mouse_y>95 and mouse_y<110 then
 	 if mouse_x>64 and mouse_x<95 then
 	  -- save
 	  for e in all(_ents) do
 	   if has(e,"machine") and e.nb==current_machine then
   	  m=_ents[current_machine]
   	  m-="recipe"
     	m+="running"
     	current_recipe.rem=compute_time(current_recipe.ingr)
     	current_recipe.time=compute_time(current_recipe.ingr)
   	  m+=cmp("recipe",current_recipe)
 	    break
  	  end
 	  end
 	  change_mode(11)
 	 elseif mouse_x>95 then
 	  change_mode(11)
 	 elseif mouse_x<50 then
  	 create_cupcakes(get_manual())
				change_mode(10) -- reset recipe
 	 end
 	end
 end
end

function pgetspr(x,y)
 if x&1==0 then
  return @(x\2+(y<<6))&15
 else
  return @(x\2+(y<<6))\16
 end
end

function psetspr(x,y,c)
 if x>=0 and x<128 and y>=0 and y<32 then
	 if x&1==0 then
	  poke(x\2+(y<<6),
	   c+(@(x\2+(y<<6))&240))
	 else
	  poke(x\2+(y<<6),
	   (c<<4)+(@(x\2+(y<<6))&15))
	 end
 end
end

function setbase(nb)
 current_base=nb
 local base_x=(current_base&15)<<3
 local base_y=(current_base\16)<<3
 for dx=0,63 do
  for dy=0,31 do
   local c=pgetspr(base_x+dx\2,base_y+dy\2)
   if c==6 or c==5 or c==0 or c==14 or c==13 then
    psetspr(64+dx,dy,c)
   else
    psetspr(64+dx,dy,7)
   end
  end
 end
end

function applydrop(x,y,d)
 for dy=0,d.h-1 do
  for dx=0,d.w-1 do
   local cbase=pgetspr(64+x+dx,y+dy) or 0
   local cdrop=pgetspr(d.sprx+dx,d.spry+dy) or 0
   if cbase!=0 and cbase!=14 and cbase!=6 and cbase!=5 and cdrop!=0 and cbase!=13 then
    psetspr(64+x+dx,y+dy,mix(cbase,cdrop))
   end
  end
 end
 update_recipe()
end

function update_recipe()
 local i=current_recipe.ingr
 if i[selected_ingr] then
  i[selected_ingr]+=1
 else
  i[selected_ingr]=1
 end
 
 local ok=0
 local total=0
 local base_x=(current_base&15)<<3
 local base_y=(current_base\16)<<3
 for dx=0,63 do
  for dy=0,31 do
   local cbase=pgetspr(base_x+dx\2,base_y+dy\2)
   local cdraw=pgetspr(64+dx,dy)
   if cbase!=0 and cbase!=6 and cbase!=5 and cbase!=14 and cbase!=13 then
    total+=1
    if(cbase==cdraw) ok+=1
   end
  end
 end
-- printh("ok:"..ok.." total:"..total)
 local q=ok/total
 current_recipe.quality=q*q
 
 current_recipe.time=compute_time(current_recipe.ingr)
end
-->8
-- search

-- todo: pause quand on trouve

function update_search()
 local dx=mouse_x+camera_x-goal_x
 local dy=mouse_y-goal_y
 if dx*dx+dy*dy<15 and not search_found then
  search_found=true
  if rnd(3)<10 then --todo
	  id=rnd(rewards)
   flash=id -- by default
	  printh("reward:"..id)
	  if id!=20 and id!=30 then
	   while del(rewards,id)!=nil do end
	  end
	  if id==2 then
	   add(ingr,{id=2,name="blueberries",sprx=0,spry=16,w=13,h=13,spd=1})
	   add(rewards,12)
	   add(rewards,12)
	  elseif id==12 then
	   add(models,{id=12,name="special blue",nb=4,coeff=1})
	   add(rewards,3)
	   add(rewards,3)
	  elseif id==3 then
	   add(ingr,{id=3,name="moon",sprx=16,spry=8,w=14,h=13,spd=3})
	   add(rewards,13)
	   add(rewards,13)
	   add(rewards,41)
	   add(rewards,42)
	   add(rewards,43)
	  elseif id==13 then
	   add(models,{id=13,name="desert dessert",nb=4,coeff=1})
	  elseif id==20 then
	   stock+=100
	   flash="you find a bigger fridge!"
	  elseif id==30 then
	   add_machine()
	   flash="you found a new machine!"
	  elseif id<50 then
	   for i in all(ingr) do
	    if i.id==(id-40) then
	     i.spd*=0.8
	     update_all_compute_time()
	     flash=i.name.." is processed faster!"
	     break
	    end
	   end
	  end
	 else
	  change_mode(13)
	  flash="you find nothing..."
	 end
	end
end
-->8
-- phone+title

function draw_phone()
 cls(0)
 -- ui
 local x,y=0,0
 if day<3 then 
  x,y=72,120
 elseif day<5 then
  x,y=72,124
 elseif day<10 then
  x,y=80,120
 else
  x,y=80,124
 end
 sspr(x,y,8,4,120,2)
 if(rnd()<0.02) radio_state=1-radio_state
 if radio_state==0 then
  sspr(88,120,7,5,111,1)
 else
  sspr(88,125,7,3,111,3)
 end

 -- time
 if t()%2<1.5 then
  rectfill(57,28,59,30,1)
  rectfill(57,34,59,36,1)
 end
 spr(222,40,20,2,3)
 spr(220,60,20,2,3)
 spr(220,75,20,2,3)
 nice_print((7+day).." jULY 2023",nil,45,1,true)
 
 -- alarm
 if t()-t0<1 then
  spr(218,64-8+10*cos(2*t()),70,2,2)
 else
	 local notifs={}
	 if day==1 then
	  add(notifs,pack("'grats for the internship!",7,8))
	  add(notifs,pack("re:gmtk game jam w/ cpiod",6,10))
	  add(notifs,pack("news:crypto falling again",6,10))
	 end
	 if #notifs==0 then
	  add(notifs,pack("you have (0) notifications",6,10))
	 end
	 y=60
	 for n in all(notifs) do
	  local text,c,c2=unpack(n)
	  local x=min(10,300*(t()-t0-1)-10*y+500)
	  rect(x-2,y-2,x+#text*4,y+6,c)
	  if x==10 then
	   ?"◆",1,y,c2
	  end
	  nice_print(text,x,y,c,false)
	  y+=10
	 end
 end
 if t()-t0>3 then
  if (2*t())%2<1.5 then
   nice_print("click to unlock",nil,100,13)
  end
		spr(2,mouse_x,mouse_y)
 end
end

function draw_title_screen()
 cls(9)
 for x=0,18 do
  for y=0,18 do
   if (x+y)&1==0 then
    local t0=t()
    local sx=x*8+10*t0
    local sy=y*8-10*t0
    sx%=144
    sy%=144
    spr(233,sx-16,sy-16,1,1,(t0+x/2)%1<.5)
   end
  end
 end
 title={{s=101,w=11,h=4,x=10,y=15,c=9,f=false},
 {s=150,w=10,h=3,x=45,y=39,c=10,f=true}}
 for s in all(title) do
  palt(10,true)
  palt(9,true)
  palt(s.c,false)
	 pal(10,4)
	 pal(9,4)
	 for dx=-1,1 do
	  for dy=-1,1 do
	   spr(s.s,s.x+dx,s.y+dy,s.w,s.h,s.f)
	  end
	 end
  pal(10,10)
  pal(9,10)
  spr(s.s,s.x,s.y,s.w,s.h,s.f)
 end
 pal()

 rectfill(64-4*6,78,64+4*6-2,90,14)
 circfill(64-4*6,84,5)
 circfill(64+4*6-2,84,5)
 nice_print("sTART!",nil,80,10)
 nice_print("INTERN ACCESS",75,113,10,false,9)
 nice_print("(c) cupcake malicieux 2002-2023",2,121,10,false,4)
 if t1 and t()<t1 then
  nice_print("sTART!",nil,80,5)
  rectfill(64-30,83,64+28,84,0)
  nice_print("an intern",nil,50,8)
  nice_print("must work,",nil,59,8)
  nice_print("not play!!",nil,68,8)
  nice_print("use intern access",nil,91,8,false)
  palt(0,false)
  palt(14,true)
  spr(231,60,98,2,2)
  palt()
 end
	spr(3,mouse_x,mouse_y)
end

function update_title_screen(lclick)
 if lclick then
	 if mouse_x>=64-20 and mouse_x<64+20 and mouse_y>78 and mouse_y<90 then
	  t1=t()+3
	 end
	 if mouse_x>=70 and mouse_x<124 and mouse_y>110 and mouse_y<120 then
	  change_mode(11)
	 end
	end
end
__gfx__
0000888880000000010000000e000000eeeeee66666eeeeeeeee66666eeeeeeecccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
008888888880000017100000e7e00000eeeee6888886eeeeeee68888866eeeeec00000000000000000000000000000000000000000000000000000000000000c
088888888888000017710000e77e0000eeee688888886eeeee6888888886eeeec00000000000000000000000000000000000000000000000000000000000000c
888888888888800017771000e777e000eee68888888886eee688888888886eeec00000000000000000777777777770000000000000000000000000000000000c
888888888888800017777100e7777e00eee68888888886eee688888888886eeec0000000000000007788877977aaa7700000000000000000000000000000000c
888888888888800017711000e77ee000ee6888888888886e68888888888886eec00000000000000788887999997aaaa70000000000000000000000000000000c
88888888888880000017100000e7e000e68888888888886e688888888888886ec000000000000078888799999997aaaa7000000000000000000000000000000c
0888888888880000000000000000000068888888888888868888888888888886c0000000000007888879999999997aaaa700000000000000000000000000000c
088888888888000000000aaaa000000068888888888888888888888888888886c0000000000007888879999999997aaaa700000000000000000000000000000c
0088888888800000000aaaaaaaa0000068888888888888888888888888888886c00000000000788887997777779997aaaa70000000000000000000000000000c
00088888880000000000000aaaaa000068888888888888888888888888888886c00000000000788887774444447797aaaa70000000000000000000000000000c
000088888000000000000000aaaaa00068888888888888888888888888888886c00000000000788887444444444477aaaa70000000000000000000000000000c
0000088800000000a00000000aaaaa00e688888888888888888888888888886ec00000000000788877444444444447aaaa70000000000000000000000000000c
0000000000000000a00000000aaaaa00e688888888888888888888888888886ec000000000007887274444444444477aaa70000000000000000000000000000c
0000000000000000aa000000aaaaaa00ee08880888088808880888088808860ec000000000000787227444444444737aa700000000000000000000000000000c
0000000000000000aaaa000aaaaaaa00ee0080d080d080d080d080d080d0800ec0000000000007722274444444447337a700000000000000000000000000000c
000cc00000000000aaaaaaaaaaaaaa00ee0d0ddd0ddd0ddd0ddd0ddd0ddd0d0ec00000000000007222274444444733377000000000000000000000000000000c
00cccc00000000000aaaaaaaaaaaa000ee0dddddd0dddddddddddddddddddd0ec00000000000007722227444447333370000000000000000000000000000000c
00cccc00cc00000000aaaaaaaaaa0000eee0ddddd0ddddddddddddddd0ddd0eec00000000000007c77222774773337770000000000000000000000000000000c
000cc00cccc00000000aaaaaaaa00000eee0ddddd0ddddddddddddddd0ddd0eec00000000000007ccc77777777777cc70000000000000000000000000000000c
0000000cccc0000000000aaaaa000000eeee0ddddd0dddddddd0dddd0ddd0eeec000000000000007cccccccccccccc700000000000000000000000000000000c
0cc00000cc0000000000000000000000eeee0ddddd0dddddddd0dddd0ddd0eeec000000000000007cccccccccccccc700000000000000000000000000000000c
cccc0000000000000000000000000000eeeee0dddd0ddddddd0dddd0ddd0eeeec0000000000000007cccccccccccc7000000000000000000000000000000000c
cccc000000cc00000000000000000000eeeee0dddddddddddd0dddd0ddd0eeeec00000000000000007cccccccccc70000000000000000000000000000000000c
0cc000000cccc0000000000000000000eeeeee0ddddddddddd0ddddddd0eeeeec0000000000000000077cccccc7700000000000000000000000000000000000c
0000cc000cccc0000000000000000000eeeeee0ddddddddddd0ddddddd0eeeeec00000000000000000007777770000000000000000000000000000000000000c
000cccc000cc00000000000000000000eeeeeee0ddddddddddddddddd0eeeeeec00000000000000000000000000000000000000000000000000000000000000c
000cccc0000000000000000000000000eeeeeee0ddddddddddddddddd0eeeeeec00000000000000000000000000000000000000000000000000000000000000c
0000cc00000000000000000000000000eeeeeeee0ddd0dddd0dddddd0eeeeeeec00000000000000000000000000000000000000000000000000000000000000c
00000000000000000000000000000000eeeeeeee0ddd0dddd0dddddd0eeeeeeec00000000000000000000000000000000000000000000000000000000000000c
00000000000000000000000000000000eeeeeeeee0dd0dddddddddd0eeeeeeeec00000000000000000000000000000000000000000000000000000000000000c
00000000000000000000000000000000eeeeeeeeee0000000000000eeeeeeeeecccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
00000000000000000000000000000000eeeeeeeeeeeee666666eeeeeeeeeeeeeeeeeeeeeeeeee666666eeeeeeeeeeeeeeeeeeeeeeeeee666666eeeeeeeeeeeee
00000000000000000000000000000000eeeeeee666666cccccc6666eeeeeeeeeeeeeeee6666664444446666eeeeeeeeeeeeeeee6666663333336666eeeeeeeee
00000000000000000000000000000000eeeee66cccccccccccccccc6eeeeeeeeeeeee6644444444444444446eeeeeeeeeeeee6633333333333333336eeeeeeee
00000000000000000000000000000000eeee6ccccccccccccccccccc66eeeeeeeeee644444c444444444444466eeeeeeeeee6333333333333333333366eeeeee
00000000000000000000000000000000eee6cccccccccccccccccccccc66eeeeeee6444aaccaaaaaaacc44444466eeeeeee6333333333333333333333366eeee
00000000000000000000000000000000eee6222222ccccccccccccc222226eeeeee644aaacaaaaaaaccaaaaaa4446eeeeee63333333333333333333333336eee
00000000000000000000000000000000ee622222222ccccccccccc22222226eeee6aaaaaaaaaaaaaaaaaaaaaaa4446eeee6333333333333333333333333336ee
00000000000000000000000000000000e6222222222cccccccccc2222222226ee6aaaaaaaaaaaaaaaaaaaacaaaaaaa6ee633333333333333333333333333336e
000000000000000000000000000000006222222222222ccccccc2222222222266aaacaaaaaaaaaaaaaaaaccaaaaaaaa663333333333333333333333333333336
000000000000000000000000000000006222cc222222222222222222222cccc66aaaccaaaaaaaaaaaaaaacaaaaacaaa663333333333333333333333333333336
000000000000000000000000000000006cccccc22222222222222222ccccccc66aaaacaaaccaaaaaaaaaaaaaaaaccaa663333333333333333333333333333336
000000000000000000000000000000006ccccccc22222222222222ccccccccc66aaaaaaaaaccaaaaaaaaaaaaaaaacaa663333333333333333333333333333336
00000000000000000000000000000000e6ccccccccc2222222cccccccccccc6ee6aaaaaaaaaaaaaaaaaaaaaaaaaaaa6ee633333333333333333333333333336e
00000000000000000000000000000000e6cccccccccccccccccccccccccccc6ee6aaaaaaaaaaaaaaaaaaaaaaaaaaaa6ee633333333333333333333333333336e
00000000000000000000000000000000ee0ccc0ccc0ccc0ccc0ccc0ccc0cc60eee0aaa0aaa0aaa0aaa0aaa0aaa0aa60eee03330333033303330333033303360e
00000000000000000000000000000000ee00c0d0c0d0c0d0c0d0c0d0c0d0c00eee00a0d0a0d0a0d0a0d0a0d0a0d0a00eee0030d030d030d030d030d030d0300e
00000000000000000000000000000000000000000000000000999900000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000099999990000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000999999990000000000000000000000000000000000000000000000000000009000000000000000000
00000000000000000000000000000000000000000000009999909990000000000000000000000000000000000000000000000000000999990000000000000000
00000000000000000000000000000000000000000000009999000990000000000000000000000000000000000000000000000000009999990000000000000000
00000000000000000000000000000000000000000000099990009990000000000000000000000000000000000000000000000000099999999000000000000000
00000000000000000000000000000000000000000000999990009900000000000000000000000000000000000000000000000000099990990000000000000000
00000000000000000000000000000000000000000000999900009900000000000000000000000000000000000000000000000000999990990000000000000000
00000000000000000000000000000000000000000009999900090000000000000000000000099990000000099900000090000000999990990000000000000000
00000000000000000000000000000000000000000009999000000000000000000000099900999999000000999990000999900000999999900000000099990000
00000000000000000000000000000000000000000009999000000000999000000000099909999099900009990990009990909000999999000000000999990000
00000000000000000000000000000000000000000009999000000009999000990000999999900099900099900990099900999900999900009000009999999000
00000000000000000000000000000000000000000099990000000009999009990000999999900099900099900000099900999900999900999900009990990000
00000000000000000000000000000000000000000099990000000099999099999000999999999999000999900000999009999900999909999990099999990009
00000000000000000000000000000000000000000099990000000099990999999009999999999999999999900000999099999000999999909990099999900099
00000000000000000000000000000000000000000099990000000099990999999009999999999999990999000000999090999000999999099900099900000090
00000000000000000000000000000000000000000099990000000099999999990009999990009990000999000009999990999009999990999900099900000990
00000000000000000000000000000000000000000099990000000099999999990099999990999900000999000009099900999009999999990000999900000900
00000000000000000000000000000000000000000009990000000099999909990099999999999000000099900099000000999009099990999000999900009900
00000000000000000000000000000000000000000009990000000999999009990099999999990000000099900990000000999099099900099909999900099000
00000000000000000000000000000000000000000009999000009900990009990999999900000000000099999900000000999099000000099999909990990000
00000000000000000000000000000000000000000000999000009900000009999999999900000000000009999000000000999090000000009999909999990000
00000000000000000000000000000000000000000000999900999000000000999999999900000000000000090000000000099990000000000999000999900000
00000000000000000000000000000000000000000000099999990000000000099909999900000000000000000000000000009990000000000000aaaa00000000
0000000000000000000000000000000000000000000000999990000000000000000999990000000000000000000000000000000000000000000aaaaaaa000000
000000000000000000000000000000000000000000000000000000000000000000099999000000000a00000000000000000000000000a000000aaaaaaaa00000
0000000000000000000000000000000000000000000000000000000000000000000999990000000aaaaa0000000000000000aa00000aaaaa000aaa0aaaaa0000
0000000000000000000000000000000000000000000000000000000000000000000999990000000aaaaaa00000000000000aaa00000aaaaaa00aa000aaaa0000
000000000000000000000000000000000000000000000000000000000000000000009999000000aaaaaaaa0000000000000aaaa000aaa0aaaa0aaa000aaaa000
000000000000000000000000000000000000000000000000000000000000aaa0000099990000000aa0aaaa00000000000000aaa000aaa0aaaa00aa000aaaaa00
000000000000000000000000000000000000000000000000000000000000aaaaa00099990000000aa0aaaaa0000000000000aa00000aa00aaaa0aa0000aaaa00
00000000000000000000000000000000000000000000000000000000000aaaaaa00009900000000aa0aaaaa00aaa000000000000000aaa0aaaa000a000aaaaa0
00000000000000000000000000000000000000000000000000000000000aaaaaa00aaaa000000000aaaaaaa0aaaaa00000000000000aaa00aaa00000000aaaa0
000000000000000000000000000000000000000000000000000000000000aaaaaa0aaaaa000000000aaaaaa0aa0aaa000000aaa00000aaa0aaaa0000000aaaa0
0000000000000000000000000000000000000000000000000000a0000000aaaaa0aaaaaaa00000a0000aaaa0aa00aaa0000aaaaa0000aaa0aaaa0000000aaaa0
0000000000000000000000000000000000000000000000000000a0000000aaaaa00aa0aaa0000aaaa00aaaa00000aaa00000aaaa00000aaaaaaa00000000aaaa
0000000000000000000000000000000000000000000000000000a000000aaaaaa00aaaaaaa00aaaaaa0aaaa00000aaaa0000aaaa000000aaaaaa00000000aaaa
0000000000000000000000000000000000000000000000000000aa0000aaaaaaa000aaaaaa00aaa0aaaaaaa00000aaaa0000aaaaa000000aaaaa00000000aaaa
0000000000000000000000000000000000000000000000000000aa0000aaaa00a000000aaa000aaa0aaaaaa000000aaa0000aaaaaa0000000aaa00000000aaaa
00000000000000000000000000000000000000000000000000000a0000aaa000aa00000aaa000aaaa0aaaaaa00000aaaa000aaaaaa0000000aaa00000000aaaa
00000000000000000000000000000000000000000000000000000aa000aaa0000a00000aaaa0000aaaaaaaaa00000aaaa0000aaaaaa000000aaa00000000aaaa
00000000000000000000000000000000000000000000000000000aa000aaa0000aa0000aaaa000aaa0aaaa0aa000aaa0a0000aaaa0a000000aaa00000000aaa0
000000000000000000000000000000000000000000000000000000a000aaa00000aa000aaaaa0aaa000aaa00aa00aaa0aa000aaa00aa00000aaaa0000000aaa0
000000000000000000000000000000000000000000000000000000aa00aaa000000aa0aaa0aaaaaa000000000aaaaaa0aa000aaa00aa00000aaaaa00000aaaa0
000000000000000000000000000000000000000000000000000000aa00aaa000000aaaaaa0aaaaa00000000000aaaa000aa0aaa0000aa000aaa0aa00000aaa00
0000000000000000000000000000000000000000000000000000000aa0aaa0000000aaaa000aaa0000000000000a00000aaaaaa0000aaa00aaa00aaa00aaaa00
0000000000000000000000000000000000000000000000000000000aaaaa00000000000000000000000000000000000000aaaa000000aaaaaa0000aaaaaaa000
00000000000000000000000000000000000000000000000000000000aaa00000000000000000000000000000000000000000000000000aaaa000000aaaaa0000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000088980000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000099990000000660000066000000000011111000000011111111111110
00000000000000000000000000000000000000000000000000000000000000000000000088980000006600000006600000001111111110000011111111111110
00000000000000000000000000000000000000000000000000000000000000000000000088980000066606666606660000011111111111000011111111111110
00000000000000000000000000000000000000000000000000000000000000000000000000000000060060000060060000011110001111000000000000011100
00000000000000000000000000000000000000000000000000000000000000000000000000000000000600060006000000011110001111000000000000011100
00000000000000000000000000000000000000000000000000000000000000000000000000000000006000060000600000111100000111100000000000111100
00000000000000000000000000000000000000000000000000000000000000000000000000000000006000060000600000111100000111100000000000111000
00000000000000000000000000000000000000000000000000000000ee00eeeeeeeeeeee000ee7e0006000060000600000111100000111100000000001111000
00000000000000000000000000000000000000000000000000000000e0880eeeeeeeeeee008e7e0e006000600000600000111100000111100000000001111000
0000000000000000000000000000000000000000000000000000000008880eeeeeeeeeee08ee7000006006000000600000111100000111100000000001110000
0000000000000000000000000000000000000000000000000000000008880eeeeeeeeeeeee7ee7e0000600000006000000111100000111100000000011110000
0000000000000000000000000000000000000000000000000000000008880eeeeeeeeeeeeee7ee70000060000060000000111100000111100000000011110000
0000000000000000000000000000000000000000000000000000000008880eeeeeeeeeee44ee7440000606666606000000111100000111100000000011100000
00000000000000000000000000000000000000000000000000000000e08880eeeee0eeee04444400006000000000600000111100000111100000000111100000
00000000000000000000000000000000000000000000000000000000e088880eee080eee00444000000000000000000000111100000111100000000111100000
00000000000000000000000000000000000000000000000000000000ee088880e0880eee66666660666666600066600000111100000111100000001111000000
00000000000000000000000000000000000000000000000000000000eee0888808880eee6bbbbb66699900660600060000111100000111100000001111000000
00000000000000000000000000000000000000000000000000000000eeee088888880eee6bbbbb66699900666066606000011110001111000000001110000000
00000000000000000000000000000000000000000000000000000000eeeee08888880eee66666660666666600600060000011110001111000000011110000000
00000000000000000000000000000000000000000000000000000000eeeeee0088880eee66666660666666600006000000011111111110000000011110000000
00000000000000000000000000000000000000000000000000000000eeeeee0888880eee6bbbb066680000660066600000001111111110000000011100000000
00000000000000000000000000000000000000000000000000000000eeeee08888880eee6bbbb066680000660600060000000011111000000000111100000000
00000000000000000000000000000000000000000000000000000000eeeeee000000eeee66666660666666600006000000000000000000000000000000000000
