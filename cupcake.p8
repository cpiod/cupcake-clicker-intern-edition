pico-8 cartridge // http://www.pico-8.com
version 41
__lua__
-- cupcake clicker (intern edition)
-- cpiod for gmtk game jam 2023

-- modes:
-- 10: color
-- 11: menu
-- 12: search
-- 13: search done
-- 99: game over

-- drop: x,y,typ

-- ingr: name,sprx,spry,w,h

function _init()
 speed={[1]=2}
 round_duration=300
 ingr={}
 nb_machines=0
 search=0
 add(ingr,{name="a",sprx=2,spry=2,w=12,h=12})
 add(ingr,{name="b",sprx=0,spry=16,w=16,h=16})
 add(ingr,{name="c",sprx=18,spry=20,w=10,h=10})
 current_quality=0
 endtime=t()+round_duration
 target=10
 current=0
	change_mode(11)
	poke(0x5f2d,3) -- enable mouse
	poke(0x5f5c,-1) -- no btnp autorepeat
	modified_machine=0
--	typ2spr={[0]=0}
--	typ2col={[0]=8}
	selected_ingr=1
	draw_zone_x=25
	draw_zone_y=25
	draw_zone_width=10+8*8
	draw_zone_height=10+8*8
	-- test
 add_machine()
end

-- version with asserts (238 tokens)

-- renaming and world
cmp,has,_ents=pack,rawget,{}

function ent()
 -- find the value in components
 function _find(self,a)
 	 for _,t in pairs(self) do
	   if(t[a]!=nil) return t
	  end
	  assert(false,"field not found:"..a)
 end
 
 -- you can remove this function
 -- if you delete the asserts
 function check_no_duplicates(self)
  for k1,t1 in pairs(self) do
   for k2,t2 in pairs(self) do
    if k1<k2 then
	    for f1,_ in pairs(t1) do
	     for f2,_ in pairs(t2) do
	      assert(f1!=f2,"duplicated field "..f1.." in "..k1.." and in "..k2)
	     end
	    end
    end
   end
  end
 end
 
 return add(_ents,
  setmetatable({},{
  -- check value in components
  -- components cannot be accessed directly
  __index=function(self,a)
   return _find(self,a)[a]
  end,
  __newindex=function(self,a,v)
   _find(self,a)[a]=v
  end,
  __add=function(self,cmp)
   -- two cases: string or table
   if type(cmp)=="string" then
--    assert(rawget(self,cmp)==nil,"already existing: "..cmp)
    rawset(self,cmp,{})
   else
    -- check if already existing
    local cn=cmp[1]
--    assert(rawget(self,cn)==nil,"already existing: "..cn)
    rawset(self,cn,cmp[2])
    check_no_duplicates(self)
   end
   return self
  end,
  __sub=function(self,cn)
   -- double removal is not a problem
   return rawset(self,cn,nil)
  end}))
end

function sys(cmps,f)
 return function(...)
  for e in all(_ents) do
   for cn in all(cmps) do
    if(not has(e,cn)) goto _
   end
   f(e,...)
   ::_::
  end
 end
end

-- machine: nb
-- running
-- recipe: ingr quality
-->8
-- draw

function _draw()
	cls(0)
	?"cupcake clicker! "..flr(endtime-t()).."s".." "
	?ceil(target-current).." more cupcakes"
	if mode==10 then
	 draw_color()
 elseif mode==11 then
  draw_menu()
 elseif mode==12 then
  draw_search()
 elseif mode==13 then
  draw_search_done()
 elseif mode==99 then
  draw_game_over()
 end
-- ?mode,110,110
end

function draw_game_over()
 cls(0)
 ?"game over...",20,60,8
end

function draw_menu()
 ?"search",20,20
 local y=50
 for e in all(_ents) do
  if has(e,"machine") then
   if has(e,"running") then
    ?"machine is running",20,y
   else
    ?"machine has no recipe",20,y
   end
   y+=10
  end
 end
	spr(2,mouse_x,mouse_y)
end

function draw_color()
	-- drops
--	for d in all(drops) do
--	 pal(14,typ2col[d.typ])
--	 spr(typ2spr[d.typ],d.x,d.y)
--	end
	-- model
	spr(3,30,70,4,4)
	-- base
	spr(8,draw_zone_x+5,draw_zone_y+5,8,8)
	-- ingredients
 for k,i in ipairs(ingr) do
  sspr(i.sprx,i.spry,i.w,i.h,100,20+10*k)
 end
	-- mouse
	if selected_ingr==nil or not in_draw_zone then
		spr(2,mouse_x,mouse_y)
	else
	 pal(8,2)
		fillp(â–‘+0b.01) -- to sprite too
		local i=ingr[selected_ingr]
  sspr(i.sprx,i.spry,i.w,i.h,mouse_x-i.w\2,mouse_y-i.h\2)
 	fillp()
 	pal()
 end
 ?"save!",80,100
 ?"bake "..get_manual().."$ cupcakes",10,100
 ?"cancel",100,100
 ?"quality "..current_recipe.quality,10,110
 local t=compute_time(current_recipe.ingr)
 ?"time "..t,10,116
 if t>0 then
  ?"recipe "..60*current_recipe.quality/t,10,122
 end
end

function draw_search()
 ?search,50,50
end

function draw_search_done()
 if flash==1 then
  ?"you found a new machine!",20,50
 end
end
-->8
-- update

function change_mode(new_mode)
 -- exit
 if mode==10 then
  current_recipe=nil
  for e in all(_ents) do
   if has(e,"machine") and e.nb==current_machine then
    e+="running"
    break
   end
  end
 elseif mode==12 then
  search=0
 end
 -- enter
 if new_mode==10 then
  for e in all(_ents) do
   if has(e,"machine") and e.nb==current_machine then
    e-="running"
    break
   end
  end
  setbase(4)
  current_recipe={ingr={},quality=0}
 end
 mode=new_mode
end

function update_search()
 search+=1
 if search==60 then
  add_machine()
  flash=1
  change_mode(13)
 end
end

function _update60()
 if t()>endtime then
  if current<target then
   change_mode(99)
  end
  target*=1.5
  endtime=t()+round_duration
 end
	mouse_x=stat(32)-1
	mouse_y=stat(33)-1
	produce()
 if mode==10 then
  update_color()
  if(btnp(4)) change_mode(11)
 elseif mode==12 then
  update_search()
  if(btnp(4)) change_mode(11)
 elseif mode==13 then
  if(btnp(4)) change_mode(11)
 elseif mode==11 then
  if btnp(5) then 
   if mouse_y>17 and mouse_y<30 then
    change_mode(12)
   elseif mouse_y>47 and mouse_y<47+10*nb_machines then
	   current_machine=ceil((mouse_y-50)/10)
    if current_machine>nb_machines then
     current_machine=nb_machines
    end
    change_mode(10)
   end
  end
 end
end
-->8
-- production

function add_machine()
 nb_machines+=1
	machine=ent()
	machine+=cmp("machine",{nb=nb_machines})
end

function compute_time(i)
 local out=0
 for k,v in pairs(i) do
  out+=v -- todo
	end
	return out
end

produce=sys({"machine","running","recipe"},
 function (e)
  if e.rem==0 then
	  e.rem=compute_time(e.ingr)
	  current+=e.quality
	  if(current>target) current=target
	 else
	  e.rem-=1
	 end
 end)
-->8
-- coloring
function get_manual()
 return flr(current_recipe.quality*20)
end

function mix(c1,c2)
 if(c1==c2) return c1
 if(c1==4 or c2==4) return 4
 if(c1>c2) c1,c2=c2,c1
 if c1==3 then
  local t={[10]=3,[9]=4,[8]=4,[12]=3,[13]=4}
  return t[c2] 
 elseif c1==8 then
  local t={[10]=9,[12]=13,[13]=13,[9]=9}
  return t[c2]
 elseif c1==9 then
  local t={[10]=9,[12]=4,[13]=4}
  return t[c2] 
 elseif c1==10 then
  local t={[12]=3,[13]=4}
  return t[c2] 
 else
  return 13
 end
end

function update_color()
 -- also used in draw
	in_draw_zone=mouse_x>=draw_zone_x
 	 and mouse_y>=draw_zone_y
 	 and mouse_x<draw_zone_x+draw_zone_width
 	 and mouse_y<draw_zone_y+draw_zone_height
 	 
	if btnp(5) then
	 for k,i in ipairs(ingr) do
	  if mouse_x>=100 and mouse_x<100+i.w
	  and mouse_y>=20+10*k and mouse_y<20+10*k+i.h then
	   selected_ingr=k
	   break
	  end
  end

 	if in_draw_zone then
 		local i=ingr[selected_ingr]
 	 applydrop(mouse_x-i.w\2-draw_zone_x-5,mouse_y-i.h\2-draw_zone_y-5,i)
 	elseif mouse_y>95 and mouse_y<110 then
 	 if mouse_x>64 and mouse_x<95 then
 	  -- save
 	  for e in all(_ents) do
 	   if has(e,"machine") and e.nb==current_machine then
   	  m=_ents[current_machine]
   	  m-="recipe"
     	m+="running"
     	current_recipe.rem=compute_time(current_recipe.ingr)
   	  m+=cmp("recipe",current_recipe)
 	    break
  	  end
 	  end
 	  change_mode(11)
 	 elseif mouse_x>95 then
 	  change_mode(11)
 	 elseif mouse_x<50 then
				current+=get_manual()
				if(current>target) current=target
				change_mode(10) -- reset recipe
 	 end
 	end
 end
end

function pgetspr(x,y)
 if x&1==0 then
  return @(x\2+(y<<6))&15
 else
  return @(x\2+(y<<6))\16
 end
end

function psetspr(x,y,c)
 if x>=0 and x<128 then
	 if x&1==0 then
	  poke(x\2+(y<<6),
	   c+(@(x\2+(y<<6))&240))
	 else
	  poke(x\2+(y<<6),
	   (c<<4)+(@(x\2+(y<<6))&15))
	 end
 end
end

function setbase(nb)
 current_base=nb
 local base_x=(current_base&15)<<3
 local base_y=(current_base\16)<<3
 for dx=0,63 do
  for dy=0,63 do
   local c=pgetspr(base_x+dx\2,base_y+dy\2)
   if c==6 or c==5 or c==0 then
    psetspr(64+dx,dy,c)
   else
    psetspr(64+dx,dy,0)
   end
  end
 end
end


function applydrop(x,y,d)
 for dy=0,d.h-1 do
  for dx=0,d.w-1 do
   local cbase=pgetspr(64+x+dx,y+dy) or 0
   local cdrop=pgetspr(d.sprx+dx,d.spry+dy) or 0
   if cbase!=6 and cbase!=5 and cdrop!=0 then
    local c=cbase==0 and cdrop or mix(cbase,cdrop)
    psetspr(64+x+dx,y+dy,c)
   end
  end
 end
 update_recipe()
end

function update_recipe()
 local i=current_recipe.ingr
 if i[selected_ingr] then
  i[selected_ingr]+=1
 else
  i[selected_ingr]=1
 end
 
 local ok=0
 local total=0
 local base_x=(current_base&15)<<3
 local base_y=(current_base\16)<<3
 for dx=0,63 do
  for dy=0,63 do
   local cbase=pgetspr(base_x+dx\2,base_y+dy\2)
   local cdraw=pgetspr(64+dx,dy)
   if cbase!=0 and cbase!=6 and cbase!=5 then
    total+=1
    if(cbase==cdraw) ok+=1
   end
  end
 end
 printh("total:"..total..",ok:"..ok)
 local q=ok/total
 current_recipe.quality=q*q
end
__gfx__
0000000000000000010000000000000000000000000000000000000000000000cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
0000000000000000171000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000c
0000008888800000177100000000000000000000000066666666666600000000c00000000000000000000000000000000000000000000000000000000000000c
0000008888800000177710000000000000000000000066666666666600000000c00000000000000000000000000000000000000000000000000000000000000c
0088888888800000177771000000000000000000006688888888888866000000c00000000000000000000000000000000000000000000000000000000000000c
0088888888800000177110000000000000000000006688aaaaaaaa8866000000c00000000000000000000000000000000000000000000000000000000000000c
008888888888800001171000000000000000000066888aaaaaaaaaa888660000c00000000000000000000000000000000000000000000000000000000000000c
00888888888880000000000000000000000000006688aaaaaaaaaaaa88660000c00000000000000000000000000000000000000000000000000000000000000c
00888888888880000000000000000000000000668888aaaaaaaaaaaa88886600c00000000000000000000000000000000000000000000000000000000000000c
008888888888800000000000000000000000006688888aaaaaaaaaa888886600c00000000000000000000000000000000000000000000000000000000000000c
0088888888888000000000000000000000000066888888888888888888886600c00000000000000000000000000000000000000000000000000000000000000c
0000888888800000000000000000000000000066888888888888888888886600c00000000000000000000000000000000000000000000000000000000000000c
0000888888800000000000000000000000000066888888888888888888886600c00000000000000000000000000000000000000000000000000000000000000c
0000000000000000000000000000000000000066888888888888888888886600c00000000000000000000000000000000000000000000000000000000000000c
0000000000000000000000000000000000000066888888888888888888886600c00000000000000000000000000000000000000000000000000000000000000c
0000000000000000000000000000000000000066888888888888888888886600c00000000000000000000000000000000000000000000000000000000000000c
0000cccc00000000000000000000000000000000668888888888888888660000c00000000000000000000000000000000000000000000000000000000000000c
0000cccc00000000000000000000000000000000668888888888888888660000c00000000000000000000000000000000000000000000000000000000000000c
00cccccc0000000000000000aaaa000000000000666666666666666666660000c00000000000000000000000000000000000000000000000000000000000000c
00cccccc0000000000000000aaaa000000000000666666666666666666660000c00000000000000000000000000000000000000000000000000000000000000c
00cccc0000000000000000aaaaaa000000000000665555555555555555660000c00000000000000000000000000000000000000000000000000000000000000c
00cccc00000000000000aaaaaa00000000000000665555555555555555660000c00000000000000000000000000000000000000000000000000000000000000c
cccccc00000000000000aaaaaa00000000000000665555555555555555660000c00000000000000000000000000000000000000000000000000000000000000c
cccccc000000000000aaaaaa0000000000000000665555555555555555660000c00000000000000000000000000000000000000000000000000000000000000c
cccccc000000000000aaaaaa0000000000000000006655555555555566000000c00000000000000000000000000000000000000000000000000000000000000c
cccccc000000000000aaaa000000000000000000006655555555555566000000c00000000000000000000000000000000000000000000000000000000000000c
cccccccc0000cccc00aaaa000000000000000000006655555555555566000000c00000000000000000000000000000000000000000000000000000000000000c
cccccccc0000cccc000000000000000000000000006655555555555566000000c00000000000000000000000000000000000000000000000000000000000000c
00cccccccccccccc000000000000000000000000000066666666666600000000c00000000000000000000000000000000000000000000000000000000000000c
00cccccccccccccc000000000000000000000000000066666666666600000000c00000000000000000000000000000000000000000000000000000000000000c
0000cccccccccc00000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000c
0000cccccccccc00000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000c
0000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000c
0000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000c
0000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000c
0000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000c
0000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000c
0000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000c
0000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000c
0000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000c
0000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000c
0000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000c
0000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000c
0000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000c
0000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000c
0000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000c
0000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000c
0000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000c
0000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000c
0000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000c
0000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000c
0000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000c
0000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000c
0000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000c
0000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000c
0000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000c
0000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000c
0000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000c
0000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000c
0000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000c
0000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000c
0000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000c
0000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000c
0000000000000000000000000000000000000000000000000000000000000000cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
