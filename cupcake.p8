pico-8 cartridge // http://www.pico-8.com
version 41
__lua__
-- cupcake clicker (intern edition)
-- cpiod for gmtk game jam 2023

-- modes:
-- 10: color
-- 11: kitchen

function _init()
 endtime=t()+60
 target=100
 current=0
	mode=11
	stock={[0]=100}
	poke(0x5f2d, 3) -- enable mouse
	drops={}
	modified_machine=0
	typ2spr={[0]=0}
	typ2col={[0]=8}
	selected_ingr=0
	draw_zone_x=20
	draw_zone_y=20
	draw_zone_width=70
	draw_zone_height=70
	machine=ent()
	machine+=cmp("machine",{nb=1})
	machine+="running"
	machine+=cmp("progress",{spd=10,rem=10})
 machine+=cmp("recipe",{ingr={[0]=5},quality=1})
end

-- drop: x,y,typ

function _update60()
	mouse_x=stat(32)-1
	mouse_y=stat(33)-1
	produce()
 if mode==10 then
  update_color()
  if(btnp(4)) mode=11
 elseif mode==12 then
  if(btnp(4)) mode=11
 elseif mode==11 then
  if btnp(5) then 
   if mouse_y>17 and mouse_y<30 then
    mode=12
   elseif mouse_y>47 and mouse_y<60 then
    mode=10
    _ents[1]-="running"
   end
  end
 end
end


function _draw()
	cls(0)
	?"cupcake clicker! "..flr(endtime-t()).."s".." "
	?(target-current).." more cupcakes"
	?stock[0].."left"
	if mode==10 then
	 draw_color()
 elseif mode==11 then
  ?"search",20,20
  ?"configure machine",20,50
		spr(2,mouse_x,mouse_y)
 end
end
-->8
function draw_color()
	fillp()
	-- drops
	for d in all(drops) do
	 pal(14,typ2col[d.typ])
	 spr(typ2spr[d.typ],d.x,d.y)
	end
	-- base
	spr(3,30,30,4,4)
	-- mouse
	if selected_ingr==nil or not in_draw_zone then
		spr(2,mouse_x,mouse_y)
	else
		fillp(â–‘+0b.01) -- to sprite too
  spr(typ2spr[selected_ingr],mouse_x,mouse_y)
 end
 ?"drops:"..#drops,10,120
 ?"save!",10,100
 ?"cancel",70,100
end

function update_color()
	in_draw_zone=mouse_x>=draw_zone_x
 	 and mouse_y>=draw_zone_y
 	 and mouse_x<draw_zone_x+draw_zone_width
 	 and mouse_y<draw_zone_y+draw_zone_height
	if btnp(5) then
 	if in_draw_zone then
 	 add(drops,{x=mouse_x,y=mouse_y,typ=selected_ingr})
 	elseif mouse_y>95 and mouse_y<110 then
 	 if mouse_x<64 then
 	 -- save
 	  m=_ents[1]
 	  m-="recipe"
 	  m-="progress"
 	  m+=cmp("progress",{spd=10,rem=10})
   	m+="running"
 	  m+=cmp("recipe",{ingr={[0]=5},quality=1})
 	  mode=11
 	 else
 	  mode=11
 	 end
 	end
 end
end
-->8
-- version with asserts (238 tokens)

-- renaming and world
cmp,has,_ents=pack,rawget,{}

function ent()
 -- find the value in components
 function _find(self,a)
 	 for _,t in pairs(self) do
	   if(t[a]!=nil) return t
	  end
	  assert(false,"field not found:"..a)
 end
 
 -- you can remove this function
 -- if you delete the asserts
 function check_no_duplicates(self)
  for k1,t1 in pairs(self) do
   for k2,t2 in pairs(self) do
    if k1<k2 then
	    for f1,_ in pairs(t1) do
	     for f2,_ in pairs(t2) do
	      assert(f1!=f2,"duplicated field "..f1.." in "..k1.." and in "..k2)
	     end
	    end
    end
   end
  end
 end
 
 return add(_ents,
  setmetatable({},{
  -- check value in components
  -- components cannot be accessed directly
  __index=function(self,a)
   return _find(self,a)[a]
  end,
  __newindex=function(self,a,v)
   _find(self,a)[a]=v
  end,
  __add=function(self,cmp)
   -- two cases: string or table
   if type(cmp)=="string" then
    assert(rawget(self,cmp)==nil,"already existing: "..cmp)
    rawset(self,cmp,{})
   else
    -- check if already existing
    local cn=cmp[1]
    assert(rawget(self,cn)==nil,"already existing: "..cn)
    rawset(self,cn,cmp[2])
    check_no_duplicates(self)
   end
   return self
  end,
  __sub=function(self,cn)
   -- double removal is not a problem
   return rawset(self,cn,nil)
  end}))
end

function sys(cmps,f)
 return function(...)
  for e in all(_ents) do
   for cn in all(cmps) do
    if(not has(e,cn)) goto _
   end
   f(e,...)
   ::_::
  end
 end
end

-- machine: nb
-- running: spd rem
-- recipe: ingr quality
-->8
produce=sys({"machine","running","recipe"},
 function (e)
  if e.rem>0 then
   e.rem-=1
  end
  if e.rem==0 and stock[0]>=e.ingr[0] then
   e.rem=e.spd
   current+=e.quality
   stock[0]-=e.ingr[0]
  end
 end)
__gfx__
00000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00088800000000001710000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
08888800000000001771000000000000000066666666666600000000000000000000000000000000000000000000000000000000000000000000000000000000
08888880000000001777100000000000000066666666666600000000000000000000000000000000000000000000000000000000000000000000000000000000
08888880000000001777710000000000006600000000000066000000000000000000000000000000000000000000000000000000000000000000000000000000
08888880000000001771100000000000006600000000000066000000000000000000000000000000000000000000000000000000000000000000000000000000
00888800000000000117100000000000660000000000000000660000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000660000000000000000660000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000066000000000000000000006600000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000066000000000000000000006600000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000066000000000000000000006600000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000066000000000000000000006600000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000066000000000000000000006600000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000066000000000000000000006600000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000066000000000000000000006600000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000066000000000000000000006600000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000660000000000000000660000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000660000000000000000660000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000666666666666666666660000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000666666666666666666660000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000660000000000000000660000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000660000000000000000660000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000660000000000000000660000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000660000000000000000660000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000006600000000000066000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000006600000000000066000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000006600000000000066000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000006600000000000066000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000066666666666600000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000066666666666600000000000000000000000000000000000000000000000000000000000000000000000000000000
